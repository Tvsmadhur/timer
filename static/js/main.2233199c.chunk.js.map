{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","time","setTime","valid","setValid","useEffect","setTimeout","className","id","onKeyDown","e","key","isNaN","target","value","Math","floor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LA6CeA,EA1CH,WAEV,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAsBA,OApBAC,qBAAU,YACPF,GACCG,YAAW,WACTL,EAAO,GAAKC,EAAQD,EAAO,KAC1B,KACLE,GAASD,EAAQ,KAChB,CAACD,IAeF,sBAAKM,UAAU,UAAf,UACE,qBAAKC,GAAG,eAAR,SACE,uDAEE,uBACEA,GAAG,YACHC,UAnBV,SAAyBC,GACT,UAAVA,EAAEC,MAEAC,MAAMF,EAAEG,OAAOC,QAA4B,GAAlBJ,EAAEG,OAAOC,MACpCV,GAAS,IAETA,GAAS,GACTF,EAAQa,KAAKC,MAAMN,EAAEG,OAAOC,aAavB,IALL,YASF,qBAAKN,GAAG,eAAR,SAAwBL,EAAQ,EAAIF,QC5B3BgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2233199c.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  // write your code here\n  const [time, setTime] = useState(0);\n  const [valid, setValid] = useState(false);\n\n  useEffect(() => {\n    !valid &&\n      setTimeout(() => {\n        time > 0 && setTime(time - 1);\n      }, 1000);\n    valid && setTime(0);\n  }, [time]);\n\n  function decreamentCount(e) {\n    if (e.key === \"Enter\") {\n      // console.log(isNaN(e.target.value));\n      if (isNaN(e.target.value) || e.target.value == 0) {\n        setValid(true);\n      } else {\n        setValid(false);\n        setTime(Math.floor(e.target.value));\n      }\n    }\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <div id=\"whole-center\">\n        <h1>\n          Reverse countdown for\n          <input\n            id=\"timeCount\"\n            onKeyDown={decreamentCount /* callback function */}\n          />{\" \"}\n          sec.\n        </h1>\n      </div>\n      <div id=\"current-time\">{valid ? 0 : time /* remaining time */}</div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}